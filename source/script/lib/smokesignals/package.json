{
  "name": "smokesignals",
  "description": "Really, really lightweight event emitting",
  "version": "0.0.7",
  "author": {
    "name": "Benjamin Thomas",
    "email": "benjamin@benjaminthomas.org",
    "url": "http://benjaminthomas.org"
  },
  "bugs": {
    "email": "benjamin@benjaminthomas.org",
    "url": "https://github.com/bentomas/smokesignals/issues"
  },
  "keywords": [
    "events",
    "emitter",
    "trigger"
  ],
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/bentomas/smokesignals.git"
  },
  "scripts": {
    "test": "node ./test.js"
  },
  "_npmUser": {
    "name": "bentomas",
    "email": "benjamin@benjaminthomas.org"
  },
  "_id": "smokesignals@0.0.7",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "_engineSupported": true,
  "_npmVersion": "1.1.0-3",
  "_nodeVersion": "v0.6.10",
  "_defaultsLoaded": true,
  "dist": {
    "shasum": "261668ba138cece7a1ec9b35fc054fe50451d5fe",
    "tarball": "http://registry.npmjs.org/smokesignals/-/smokesignals-0.0.7.tgz"
  },
  "readme": "Smoke Signals\n=============\n\nReally, really lightweight event emitting for Node and the browser.\n\n(though Node already has [event emitting built in][1] so I don't know why you'd\nuse this there. This is directly inspired by Node's and doesn't even have all of\nthe functionality that Node's event emitter has.)\n\nThis library has three goals:\n\n1. Make it easy and intuitive to listen for and initiate events on an object.\n2. Be really small. Right now the minified version comes in at 407 bytes (247\n   bytes gzipped).\n3. Not pollute the global namespace or the objects it modifies with a bunch of\n   crap. I define crap as anything that is not the API.\n\nThere are many other [wonderful libraries that do similar things][2], but none of them\nworked exactly how I wanted them to work or met all the goals above.\n\nInstalling\n----------\n\nWith npm:\n\n    npm install smokesignals\n\nBy hand, just download `smokesignals.js` or `smokesignals.min.js` and put your\nchoice in a place you can access from your Node scripts or your webpage.\n\nLoading\n-------\n\nWith Node:\n\n    var smokesignals = require('smokesignals');\n\nIn the browser include the smokesignals script:\n\n    <script src=\"smokesignals.js\"></script>\n\nUsing\n-----\n\nMake any object an event emitter:\n\n    var jack = {};\n    smokesignals.convert(jack);\n\nOr if you prefer constructors:\n\n    function Person() {\n      smokesignals.convert(this);\n    }\n    var jack = new Person();\n\nNow you can listen for events:\n\n    function listener(name) {\n        window.alert('hello ' + name + '!');\n    }\n    jack.on('say hello', listener);\n\nAnd emit events:\n\n    jack.emit('say hello', 'jill');\n\nAnd remove a listener:\n\n    jack.off('say hello', listener);\n\nOr if you only want to listen for an event once:\n\n    jack.once('another event', function() {\n        window.alert(\"I'll only be called once!\");\n    });\n    jack.emit('another event');\n\nOr remove all listeners for an event:\n\n    jack.off('say hello');\n\nOr if you want to remove ALL listeners:\n\n    // just reconvert the object...\n    smokesignals.convert(jack);\n\nThat's it! One global object (`smokesignals`) and when used it adds 4 methods to\nyour objects (`on`, `once`, `off` and `emit`).\n\nBy the way, all methods are chainable:\n\n    var jack = smokesignals.convert({})\n      .on('event one', function() { ... })\n      .on('event two', function() { ... })\n      .emit('event one')\n      .once('event three', function() { ... })\n      .off ('event one')\n      ;\n\n[![Build Status](https://secure.travis-ci.org/bentomas/smokesignals.png?branch=master)](http://travis-ci.org/bentomas/smokesignals)\n\n[1]: http://nodejs.org/docs/latest/api/events.html\n[2]: http://microjs.com/#events\n",
  "maintainers": [
    {
      "name": "bentomas",
      "email": "benjamin@benjaminthomas.org"
    }
  ],
  "directories": {},
  "_shasum": "261668ba138cece7a1ec9b35fc054fe50451d5fe",
  "_resolved": "https://registry.npmjs.org/smokesignals/-/smokesignals-0.0.7.tgz",
  "_from": "smokesignals@0.0.7"
}
